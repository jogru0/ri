
// import utils;

fun map(list: List, callable: Callable) -> List {
    val result = List.new();
    for entry in list {
        result.push(callable.invoke(entry))
    }
    result
}

fun parse_int(s: List) -> int {
    s.parse(int)
}

fun main() -> int {
    val input_string: List = List.from_file("res/aoc/1.txt");

    val number_strings: List = input_string.split_whitespace();

    val numbers = number_strings.map(parse_int);

    val left = List.new();
    val right = List.new();

    val i  = 0;
    val length = numbers.len();
    while i < length {
        if i % 2 == 0 {
            left.push(number_strings.get(i).parse(int));
        } else {
            right.push(number_strings.get(i).parse(int));
        }

        i = i + 1;
    }

    val sum = 0;

    i = 0;
    length = right.len();
    while i < length {
        val value = left.get(i);

        val appaerances = 0;

        val j = 0;
        while j < length {
            if right.get(j) == value {
                appaerances = appaerances + 1;
            }
            
            j = j + 1
        }

        sum = sum + value * appaerances;

        i = i+1;
    }

    sum

}